# Generated by Django 4.1 on 2022-12-25 05:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Admin",
            fields=[
                ("admin_id", models.AutoField(primary_key=True, serialize=False)),
                ("user_id", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=32)),
                ("age", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Classroom",
            fields=[
                ("classroom_id", models.AutoField(primary_key=True, serialize=False)),
                ("classroom_name", models.CharField(max_length=100)),
                ("classroom_capacity", models.IntegerField()),
                ("classroom_place", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("course_id", models.AutoField(primary_key=True, serialize=False)),
                ("course_code", models.CharField(max_length=32)),
                ("course_name", models.CharField(max_length=32)),
                ("course_max_capacity", models.IntegerField()),
                ("course_introduction", models.CharField(max_length=200)),
                ("course_hour", models.IntegerField()),
                ("course_type", models.CharField(max_length=100)),
                ("course_score", models.FloatField()),
                ("course_classroom", models.ManyToManyField(to="db.classroom")),
            ],
        ),
        migrations.CreateModel(
            name="Publish",
            fields=[
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=32)),
                ("city", models.CharField(max_length=32)),
                ("email", models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                ("student_id", models.AutoField(primary_key=True, serialize=False)),
                ("user_id", models.IntegerField()),
                ("student_name", models.CharField(max_length=100)),
                ("student_sex", models.CharField(max_length=100)),
                ("student_major", models.CharField(max_length=100)),
                ("student_class", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                ("teacher_id", models.AutoField(primary_key=True, serialize=False)),
                ("user_id", models.IntegerField()),
                ("teacher_name", models.CharField(max_length=100)),
                ("teacher_sex", models.CharField(max_length=100)),
                ("teacher_profession_title", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Time",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("semester", models.CharField(max_length=100)),
                ("week", models.IntegerField()),
                ("day", models.IntegerField()),
                ("class_num", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("user_type", models.IntegerField()),
                ("user_name", models.CharField(max_length=100)),
                ("user_password", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Course_table",
            fields=[
                ("course_id", models.AutoField(primary_key=True, serialize=False)),
                ("course_table_name", models.CharField(max_length=200)),
                ("course_list", models.ManyToManyField(to="db.course")),
            ],
        ),
        migrations.CreateModel(
            name="Course_constraint",
            fields=[
                ("course_id", models.IntegerField(primary_key=True, serialize=False)),
                ("course_continue", models.BooleanField()),
                ("course_is_odd_week", models.BooleanField()),
                ("course_smallest_day_number", models.IntegerField()),
                ("course_biggest_day_number", models.IntegerField()),
                ("course_smallest_sections", models.IntegerField()),
                ("course_biggest_sections", models.IntegerField()),
                ("course_can_weekends", models.BooleanField()),
                ("course_no_sections", models.CharField(max_length=32)),
                ("max_course_room_ratio", models.FloatField()),
                ("illegal_course_before", models.ManyToManyField(to="db.course")),
            ],
        ),
        migrations.AddField(
            model_name="course",
            name="course_student",
            field=models.ManyToManyField(to="db.student"),
        ),
        migrations.AddField(
            model_name="course",
            name="course_teacher",
            field=models.ManyToManyField(to="db.teacher"),
        ),
        migrations.AddField(
            model_name="course",
            name="course_time",
            field=models.ManyToManyField(to="db.time"),
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                ("nid", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=32)),
                ("publishDate", models.DateField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=5)),
                ("author", models.ManyToManyField(to="db.author")),
                (
                    "publish",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="db.publish"
                    ),
                ),
            ],
        ),
    ]
